services:
  setup:
    container_name: setup
    image: transcendance_setup_elk
    build:
      context: ../devops/setup_elk
      dockerfile: Dockerfile
    depends_on:
      init_vault:
        condition: service_completed_successfully
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - init_vault:/secret/
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/elasticsearch/elasticsearch.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    networks:
      - monitoring
      - vault

  elasticsearch:
    container_name: elastic
    build:
      context: ../devops/elasticsearch
      dockerfile: Dockerfile
    depends_on:
      setup:
        condition: service_healthy
      init_vault:
        condition: service_completed_successfully
    image: transcendance_elasticsearch
    labels:
      co.elastic.logs/module: elasticsearch
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - elastic_data:/usr/share/elasticsearch/data
      - init_vault:/secret/
    user: "1000"
    ports:
      - 9200:9200
    environment:
      - node.name=elasticsearch
      - cluster.name=transcendance
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/elasticsearch/elasticsearch.key
      - xpack.security.http.ssl.certificate=certs/elasticsearch/elasticsearch.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/elasticsearch/elasticsearch.key
      - xpack.security.transport.ssl.certificate=certs/elasticsearch/elasticsearch.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
    mem_limit: 1073741824
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - monitoring
      - vault

  kibana:
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
      init_vault:
        condition: service_completed_successfully
    image: transcendance_kibana
    build:
      context: ../devops/kibana
      dockerfile: Dockerfile
    labels:
      co.elastic.logs/module: kibana
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
      - init_vault:/secret/
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/certs/ca/ca.crt
    mem_limit: ${KB_MEM_LIMIT}
    entrypoint: /entrypoint.sh
    command: /usr/local/bin/kibana-docker
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://kibana:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - monitoring
      - vault

  logstash:
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
      init_vault:
        condition: service_completed_successfully
    image: transcendance_logstash
    build:
      context: ../devops/logstash
      dockerfile: Dockerfile
    labels:
      co.elastic.logs/module: logstash
    ports:
      - 5044:5044
      - 7777:7777
      - 9600:9600
    volumes:
      - certs:/usr/share/logstash/certs
      - logstashdata01:/usr/share/logstash/data
      - ../devops/logstash/pipelines/:/usr/share/logstash/pipeline/:ro
      - ../devops/logstash/patterns/:/usr/share/logstash/patterns/:ro
      - ../devops/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - init_vault:/secret/
    environment:
      - XPACK_MONITORING_ENABLED=false
      - xpack.monitoring.enabled=false
      - ELASTIC_HOSTS=https://elasticsearch:9200
    mem_limit: ${LS_MEM_LIMIT}
    networks:
      - monitoring
      - vault
