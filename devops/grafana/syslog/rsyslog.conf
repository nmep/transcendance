# Load the imfile module to read log files
module(load="imfile")
global(workDirectory="/tmp/grafana/log")
# Set the maximum message size
$MaxMessageSize 64k

# Define an input that monitors Grafana's log file
input(type="imfile"
    File="/var/log/grafana/grafana.log"
    Tag="grafana:"
)

# Custom JSON template to forward logs to Logstash
template(name="ServiceTemplate" type="list") {
    constant(value="{")
    constant(value="\"time\":\"") property(name="timegenerated") constant(value="\", ")
    constant(value="\"service\":\"grafana\", ")  # Hard-coded service name
    constant(value="\"host\":\"") property(name="hostname") constant(value="\", ")
    constant(value="\"app\":\"") property(name="programname") constant(value="\", ")
    constant(value="\"severity\":\"") property(name="syslogseverity-text") constant(value="\", ")
    constant(value="\"message\":\"") property(name="msg" format="json") constant(value="\"")
    constant(value="}\n")
}

# Forward all logs to Logstash via UDP on port 514
if $syslogtag contains "grafana:" then {
    action(
        type="omfwd"
        target="logstash"
        port="514"
        protocol="udp"
        Template="ServiceTemplate"
        action.resumeRetryCount="-1"
        queue.spoolDirectory="/var/spool/rsyslog"
        queue.filename="logstash-queue"
        queue.type="LinkedList"
        queue.size="50000"
    )
    stop
}
