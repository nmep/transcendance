
services:
  reverseproxy:
    image: 'nginx:1.27'
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/conf/core.conf:/etc/nginx/conf.d/core.conf
      - ./nginx/conf/reverseproxy.conf:/etc/nginx/conf.d/reverseproxy.conf
      - ./nginx/html:/var/www/html
      - ./nginx/conf/ssl_certificate.sh:/usr/local/bin/ssl_certificate.sh
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - monitoring
      - auth
    entrypoint: ["/bin/bash", /usr/local/bin/ssl_certificate.sh]

  nginx_prometheus_exporter:
    container_name: nginx_prometheus_exporter
    image: nginx/nginx-prometheus-exporter:1.4.0
    depends_on:
      - prometheus
    ports:
      - '9113:9113'
    networks:
      - monitoring
    command:
      - --nginx.scrape-uri=https://reverseproxy/status

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest

    restart: always
    volumes:
      - ./devops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
    networks:
      - monitoring

  db:
    image: 'postgres'
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=toto_db
      - POSTGRES_USER=toto
      - POSTGRES_PASSWORD=password
    networks:
      - auth

  auth:
    container_name: auth_api
    restart: always
    build: ./backend/auth/
    ports:
      - "8000:8000"
    networks:
      - auth

networks:
  monitoring:
  auth: